program:
function definition {name: factorial; arguments: n; line: 1; column: 0}
body:
|   if {line: 2; column: 4}
|   condition:
|   |   binary operation {operator: ==; line: 2; column: 7}
|   |   first operand:
|   |   |   variable access {variable name: n; line:2; column:7}
|   |   second operand:
|   |   |   integer literal {value: 0; line: 2; column: 12}
|   then body:
|   |   assignment {variable name: factorial; line: 3; column: 8}
|   |   assigned expression:
|   |   |   integer literal {value: 0; line: 3; column: 21}
|   else body:
|   |   assignment {variable name: factorial; line: 5; column: 8}
|   |   assigned expression:
|   |   |   binary operation {operator: *; line: 5; column: 21}
|   |   |   first operand:
|   |   |   |   variable access {variable name: n; line:5; column:21}
|   |   |   second operand:
|   |   |   |   function call {name : factorial; line: 5; column: 25}
|   |   |   |   argument0:
|   |   |   |   |   binary operation {operator: -; line: 5; column: 35}
|   |   |   |   |   first operand:
|   |   |   |   |   |   variable access {variable name: n; line:5; column:35}
|   |   |   |   |   second operand:
|   |   |   |   |   |   integer literal {value: 1; line: 5; column: 39}
statement:
|   empty statement
